//
//  Textfield.swift
//
//  Created by Bhavin
//  skype : bhavin.bhadani
//

import Foundation
import UIKit
import QuartzCore

extension UITextField{
    
    /**
     cornerRadius: to give a corner radius to textfield.
     
     - parameter radius:  When positive, the background of the layer will be drawn with
     rounded corners. Also effects the mask generated by the
     `masksToBounds' property. Defaults to zero. Animatable.
     - parameter placeholder: placeholder string
     
     */
    func cornerRadius(radius:CGFloat, andPlaceholderString placeholder:String){
        layer.cornerRadius = radius
        layer.masksToBounds = true
        layer.borderColor = UIColor.white.cgColor
        layer.borderWidth = 1.0
        self.attributedPlaceholder = NSAttributedString(string:placeholder,
                                                        attributes:[NSAttributedString.Key.foregroundColor: UIColor.white])
    }
    
    func paddedTextField(frame:CGRect){
        let spacerView = UIView(frame:frame)
        leftViewMode = .always
        leftView = spacerView
    }
}

extension UIImage {
    func resizeImage(newWidth: CGFloat) -> UIImage {
        let scale = newWidth / self.size.width
        let newHeight = self.size.height * scale
        UIGraphicsBeginImageContext(CGSize(width: newWidth, height: newHeight))
        self.draw(in: CGRect(x: 0, y: 0, width: newWidth, height: newHeight))
        let newImage = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        
        return newImage!
    }
}

extension String {
    func isEmptyWhiteSpaces() -> Bool {
        let whitespaceSet = CharacterSet.whitespaces
        return self.trimmingCharacters(in: whitespaceSet).isEmpty
    }
}

